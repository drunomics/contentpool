# Defaults for this variables are set in the compose file.
# Variables can optionally be overridden via the environment.

# Be sure to set COMPOSE_PROJECT_NAME to your project.
COMPOSE_PROJECT_NAME=example
COMPOSE_CODE_DIR=..

# WEB_DIRECTORY=web
# WEB_HTTP_PORT=80
# WEB_LISTEN_IP=127.0.0.1

# WEB_IMAGE=drunomics/lamp
# WEB_IMAGE_VERSION=latest

# Adjust the image via provision vars. Multiple vars files may be provided
# and are included in alphabetical order. Thus, files should be named like
# 20-provision-vars.yml 30-extra-vars.yml etc.
# WEB_PROVISION_VARS_PATTERN=web/*-vars.yml

#
# Further customization is possible by adjusting the following default commands
# and/or by providing extra requirements.yml and playbook files.
#
# WARNING:
#   Docker does not support "" for .env files, but quotes would be required for
#   handling spaces correctly in bash. That makes docker .env files incompatible
#   with bash. See https://github.com/docker/compose/issues/2854.
#   Thus, do only set environment variables with spaces in the environment
#   of docker compose (e.g. via dotenv) but do NOT set it in a docker .env file.

# The command to use for provisoning.
# WEB_PROVISION_PLAYBOOK_COMMAND=ansible-playbook lamp.yml --tags lamp,base,nodejs,tools -vv
# WEB_PROVISION_PLAYBOOK_COMMAND=ansible-playbook lamp.yml --tags tools --skip-tags=apache -vv

# Pattern for extra-* playbook and requirement configuration to apply.
# WEB_EXTRA_PLAYBOOK_PATTERN=extra*.yml
