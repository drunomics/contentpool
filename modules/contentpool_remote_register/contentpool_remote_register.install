<?php

/**
 * @file
 * Update functions for the contentpool_remote_register module.
 */

use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\StringTranslation\TranslatableMarkup;

/**
 * Add the push_notifications field.
 */
function contentpool_remote_register_update_8001() {
  $definition_update_manager = \Drupal::entityDefinitionUpdateManager();

  $push_notifications = BaseFieldDefinition::create('boolean')
    ->setLabel(new TranslatableMarkup('Push notifications'))
    ->setDescription(new TranslatableMarkup('Immediately push the content to the remote when updated.'))
    ->setRequired(FALSE)
    ->setDefaultValue(FALSE);

  $definition_update_manager->installFieldStorageDefinition('push_notifications', 'remote_registration', 'contentpool_remote_register', $push_notifications);

  $entity_type = $definition_update_manager->getEntityType('remote_registration');
  \Drupal::database()->update($entity_type->getBaseTable())
    ->fields(['push_notifications' => 0])
    ->execute();
}

/**
 * Add 'replication_filters' field to 'remote_registration' entities.
 */
function contentpool_remote_register_update_8002() {
  // Install the definition that this field had in
  // Drupal\contentpool_remote_register\Entity\RemoteRegistration::baseFieldDefinitions()
  // at the time that this update function was written. If/when code is
  // deployed that changes that definition, the corresponding module must
  // implement an update function that invokes
  // \Drupal::entityDefinitionUpdateManager()->updateFieldStorageDefinition()
  // with the new definition.
  $storage_definition = BaseFieldDefinition::create('map')
    ->setLabel(t('Replication filters'))
    ->setDescription(t('The list of entity types and entities to be replicated.'));

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('replication_filters', 'remote_registration', 'remote_registration', $storage_definition);
}
