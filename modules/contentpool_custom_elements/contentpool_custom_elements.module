<?php

/**
 * @file
 * Custom elements hooks.
 */

use Drupal\contentpool_custom_elements\Component\Utility\ContentpoolHtml;
use Drupal\contentpool_custom_elements\CustomElementTeaserFeldItemList;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_library_info_alter().
 */
function contentpool_custom_elements_library_info_alter(&$libraries, $extension) {
  if ($extension == 'custom_elements') {
    $libraries['main']['dependencies'][] = 'contentpool_custom_elements/main';
  }
}

/**
 * Implements hook_entity_bundle_field_info().
 *
 * Add a computed field for providing custom-elements markup for teaser lists.
 */
function contentpool_custom_elements_entity_bundle_field_info(EntityTypeInterface $entity_type, $bundle, array $base_field_definitions) {
  $fields = [];
  if ($entity_type->id() == 'node' && $bundle == 'article') {

    $fields['teaser'] = BaseFieldDefinition::create('markup_field')
      ->setLabel(t('Teaser'))
      ->setDescription(t('The teaser rendered via custom elements.'))
      ->setComputed(TRUE)
      ->setCustomStorage(TRUE)
      ->setClass(CustomElementTeaserFeldItemList::class);
  }
  return $fields;
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function contentpool_custom_elements_node_presave(EntityInterface $entity) {
  if (isset($entity->field_paragraphs_markup)) {
    $view_builder = \Drupal::entityManager()->getViewBuilder('paragraph');
    $build = [];
    foreach ($entity->field_paragraphs as $item) {
      if ($item->entity) {
        $build[] = $view_builder->view($item->entity, 'custom_elements_full');
      }
    }
    /** @var \Drupal\Core\Render\Renderer $renderer */
    $renderer = \Drupal::service('renderer');
    $markup = (string) $renderer->renderPlain($build);
    // Make sure URLs to images etc. are all absolute, as in RSS feeds.
    $markup = ContentpoolHtml::transformRootRelativeUrlsToAbsolute($markup, \Drupal::request()->getSchemeAndHttpHost());

    $entity->field_paragraphs_markup->markup = $markup;

    // Prepare assets with all custom element libraries.
    $assets_extractor = \Drupal::service('contentpool_custom_elements.assets_extractor');
    /** @var \Drupal\contentpool_custom_elements\Service\AssetsExtractor $assets_extractor */
    $assets = $assets_extractor->getRenderedAssetsFromLibraries(['custom_elements/main']);
    $entity->field_paragraphs_markup->assets = $assets;
  }
}
